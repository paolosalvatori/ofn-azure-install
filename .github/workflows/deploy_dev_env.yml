# This workflow deploys the OFN development environment via an ARM template
name: Deploy OFN Dev
on:
  repository_dispatch:
    types: [deploy_dev_env]
jobs:
  azure-job:
    runs-on: [ubuntu-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Login to Azure
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Create Resource Group
      env:
        LOCATION: ${{ github.event.client_payload.location }}
        RESOURCE_GROUP: ${{ github.event.client_payload.resourceGroupName }}
      if: ${{ github.event.client_payload.location != null && github.event.client_payload.resourceGroupName != null }}
      run: |
        subscriptionId=$(az account show --query id --output tsv)
        if [[ -z $LOCATION ]]; then
          echo "The location parameter cannot be null or empty"
          exit 1
        fi
        if [[ -z $RESOURCE_GROUP ]]; then
          echo "The resource group parameter cannot be null or empty"
          exit 1
        fi
        if ! az group show --name "$RESOURCE_GROUP" &>/dev/null; then
            echo "No [$RESOURCE_GROUP] resource group actually exists in the [$subscriptionId] subscription"
            echo "Creating [$RESOURCE_GROUP] resource group in the [$subscriptionId] subscription..."

            # Create the resource group
            if az group create --name "$RESOURCE_GROUP" --location "$LOCATION" 1>/dev/null; then
                echo "[$RESOURCE_GROUP] resource group successfully created in the [$subscriptionId] subscription"
            else
                echo "Failed to create [$RESOURCE_GROUP] resource group in the [$subscriptionId] subscription"
                exit 1
            fi
        else
            echo "[$RESOURCE_GROUP] resource group already exists in the [$subscriptionId] subscription"
        fi
    - name: Pre Deployment Script
      uses: azure/CLI@v1
      env:
        PRE_SCRIPT_LOCATION: ${{ github.event.client_payload.preScriptLocation }}
        PRE_SCRIPT_ARGUMENT: ${{ github.event.client_payload.preScriptArgument }}
      if: ${{ github.event.client_payload.preScriptLocation != null && endsWith(github.event.client_payload.preScriptLocation, '.sh') }}
      with:
        azcliversion: latest
        inlineScript: |
          if [[ -z $PRE_SCRIPT_LOCATION ]]; then
            echo "No pre deployment script was defined in the call"
            exit 0
          fi
          if [[ -f $PRE_SCRIPT_LOCATION ]]; then
            chmod +x $PRE_SCRIPT_LOCATION
            if [[ -z $PRE_SCRIPT_ARGUMENT ]]; then
              bash $PRE_SCRIPT_LOCATION
            else
              bash $PRE_SCRIPT_LOCATION $PRE_SCRIPT_ARGUMENT
            fi
          else
            echo "[$PRE_SCRIPT_LOCATION] script file was not found"
            exit 1
          fi
    - name: Validate and Deploy ARM Template
      uses: azure/CLI@v1
      env:
        RESOURCE_GROUP: ${{ github.event.client_payload.resourceGroupName }}
        TEMPLATE_LOCATION: ${{ github.event.client_payload.templateLocation }}
        PARAMETERS: ${{ github.event.client_payload.parameters }}
      if: ${{ github.event.client_payload.resourceGroupName != null && github.event.client_payload.templateLocation != null && github.event.client_payload.parameters != null}}
      with:
        azcliversion: latest
        inlineScript: |
          if [[ -z $RESOURCE_GROUP ]]; then
            echo "The resource group parameter cannot be null or empty"
            exit 1
          fi
          if [[ -z $TEMPLATE_LOCATION ]]; then
            echo "The template location parameter cannot be null or empty"
            exit 1
          fi 
          if [[ ! -f $TEMPLATE_LOCATION ]]; then
            echo "[$TEMPLATE_LOCATION] ARM template was not found"
            exit 1
          fi 
          if [[ -z $PARAMETERS ]]; then
            echo "The parameters parameter cannot be null or empty"
            exit 1
          fi
          echo  "validating [$TEMPLATE_LOCATION] ARM template..."
          error=$(az deployment group validate \
            --resource-group "$RESOURCE_GROUP" \
            --template-file "$TEMPLATE_LOCATION" \
            --parameters "$PARAMETERS" \
            --query error \
            --output json)
          if [[ -z $error ]]; then
              echo "[$TEMPLATE_LOCATION] ARM template successfully validated"
          else
              echo "Failed to validate the [$TEMPLATE_LOCATION] ARM template"
              echo "$error"
              exit 1
          fi
          echo  "Deploying [$TEMPLATE_LOCATION] ARM template..."
          az deployment group create \
            --resource-group $RESOURCE_GROUP \
            --template-file $TEMPLATE_LOCATION \
            --parameters $PARAMETERS 1>/dev/null
          if [[ $? == 0 ]]; then
              echo "[$TEMPLATE_LOCATION] ARM template successfully deployed"
          else
              echo "Failed to deploy the [$TEMPLATE_LOCATION] ARM template"
              exit -1
          fi
    - name: Post Deployment Script
      uses: azure/CLI@v1
      env:
        POST_SCRIPT_LOCATION: ${{ github.event.client_payload.postScriptLocation }}
        POST_SCRIPT_ARGUMENT: ${{ github.event.client_payload.postScriptArgument }}
      if: ${{ github.event.client_payload.postScriptLocation != null && endsWith(github.event.client_payload.postScriptLocation, '.sh') }}
      with:
        azcliversion: latest
        inlineScript: |
          if [[ -z $POST_SCRIPT_LOCATION ]]; then
            echo "No post deployment script was defined in the call"
            exit 0
          fi
          if [[ -f $POST_SCRIPT_LOCATION ]]; then
            chmod +x $POST_SCRIPT_LOCATION
            if [[ -z $POST_SCRIPT_ARGUMENT ]]; then
              bash $POST_SCRIPT_LOCATION
            else
              bash $POST_SCRIPT_LOCATION $POST_SCRIPT_ARGUMENT
            fi
          else
            echo "[$POST_SCRIPT_LOCATION] script file was not found"
            exit 1
          fi
